// <auto-generated />
using System;
using ERP.HRM.ORM;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ERP.HRM.ORM.Migrations
{
    [DbContext(typeof(HRMContext))]
    partial class HRMContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ERP.HRM.Entities.ApplicationNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LastNumber");

                    b.Property<int>("PeriodId");

                    b.Property<int>("PersonApplicationTypeId");

                    b.Property<string>("Prefix");

                    b.HasKey("Id");

                    b.HasIndex("PeriodId");

                    b.HasIndex("PersonApplicationTypeId");

                    b.ToTable("ApplicationNumber");
                });

            modelBuilder.Entity("ERP.HRM.Entities.ContractType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("ContractType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Muqavile"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Daimi"
                        });
                });

            modelBuilder.Entity("ERP.HRM.Entities.Holiday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BeginDate");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Holiday");
                });

            modelBuilder.Entity("ERP.HRM.Entities.Period", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BeginDate");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Period");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BeginDate = new DateTime(2019, 7, 16, 15, 48, 46, 994, DateTimeKind.Local).AddTicks(1950),
                            EndDate = new DateTime(2019, 7, 16, 11, 48, 46, 995, DateTimeKind.Utc).AddTicks(5638),
                            Name = "1-ci sessiya"
                        });
                });

            modelBuilder.Entity("ERP.HRM.Entities.PersonApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int?>("DepartmentPositionId");

                    b.Property<int>("FromDepartmentPositionId");

                    b.Property<int>("PersonApplicationTypeId");

                    b.Property<int>("PersonId");

                    b.Property<int?>("PersonelId");

                    b.Property<int>("ToDepartmentPositionId");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentPositionId");

                    b.HasIndex("PersonApplicationTypeId");

                    b.HasIndex("PersonelId");

                    b.ToTable("PersonApplication");
                });

            modelBuilder.Entity("ERP.HRM.Entities.PersonApplicationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FilePath");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("PersonApplicationType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FilePath = "C:\\Users\\User\\Downloads\\ERP-master\\ERP-master",
                            Name = "Isden Cixarilma"
                        });
                });

            modelBuilder.Entity("ERP.HRM.Entities.PersonTabel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BeginTime");

                    b.Property<DateTime>("Date");

                    b.Property<int>("DepartmentPositionId");

                    b.Property<DateTime>("EndTime");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentPositionId");

                    b.ToTable("PersonTabel");
                });

            modelBuilder.Entity("ERP.HRM.Entities.Vacation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BeginDate");

                    b.Property<int>("DepartmentPositionId");

                    b.Property<DateTime>("EndDate");

                    b.Property<int>("PersonId");

                    b.Property<int?>("PersonelId");

                    b.Property<int>("ReplacementPersonId");

                    b.Property<bool>("Status");

                    b.Property<int>("VacationTypeId");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentPositionId");

                    b.HasIndex("PersonelId");

                    b.HasIndex("VacationTypeId");

                    b.ToTable("Vacation");
                });

            modelBuilder.Entity("ERP.HRM.Entities.VacationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("VacationType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ezamiyyet"
                        });
                });

            modelBuilder.Entity("ERP.Shared.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Baki"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Naxcivan"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Gence"
                        });
                });

            modelBuilder.Entity("ERP.Shared.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MobilePhonePin");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("ERP.Shared.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentId");

                    b.Property<int>("Index");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Index = 123456,
                            Name = "Baki Dovlet Universiteti",
                            ShortName = "BDU"
                        });
                });

            modelBuilder.Entity("ERP.Shared.Entities.DepartmentPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContractTypeId");

                    b.Property<int>("DepartmentId");

                    b.Property<string>("MaterialResponsibilityFile");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("VacationDayCount");

                    b.HasKey("Id");

                    b.HasIndex("ContractTypeId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("DepartmentPosition");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContractTypeId = 1,
                            DepartmentId = 1,
                            MaterialResponsibilityFile = "File2",
                            Name = "Fexri Doktorlar",
                            VacationDayCount = "3"
                        });
                });

            modelBuilder.Entity("ERP.Shared.Entities.FamilyStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("FamilyStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Evli"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Subay"
                        });
                });

            modelBuilder.Entity("ERP.Shared.Entities.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("Gender");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Qadin"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Kisi"
                        });
                });

            modelBuilder.Entity("ERP.Shared.Entities.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Fax")
                        .HasMaxLength(50);

                    b.Property<string>("Index")
                        .HasMaxLength(10);

                    b.Property<string>("MobileNumber");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("OrganizationLegalFormId");

                    b.Property<int>("OrganizationLegalTypeId");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("TopOrganizationId");

                    b.Property<string>("VORN")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("OrganizationLegalFormId");

                    b.HasIndex("OrganizationLegalTypeId");

                    b.ToTable("Organization");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "office@pasha-holding.az",
                            Fax = "(+994 12) 505 15 35 ",
                            Index = "5055000",
                            MobileNumber = "(+994 12) 505 50 00",
                            Name = "Pasha Holding",
                            OrganizationLegalFormId = 1,
                            OrganizationLegalTypeId = 1,
                            ShortName = "PH",
                            VORN = "MMC1234"
                        });
                });

            modelBuilder.Entity("ERP.Shared.Entities.OrganizationLegalForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("OrganizationLegalForm");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Korporativ Strategiya"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Biznes Fokus"
                        });
                });

            modelBuilder.Entity("ERP.Shared.Entities.OrganizationLegalType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("OrganizationLegalType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sehmdarlarin Hedefleri"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Maliyye Sektoru"
                        });
                });

            modelBuilder.Entity("ERP.Shared.Entities.PersonPhone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("PersonPhone");
                });

            modelBuilder.Entity("ERP.Shared.Entities.Personel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthdate");

                    b.Property<int>("CityId");

                    b.Property<string>("Email");

                    b.Property<int>("FamilyStatusId");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("GenderId");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("PinCode");

                    b.Property<string>("Residence")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("SerialNumber");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("FamilyStatusId");

                    b.HasIndex("GenderId");

                    b.ToTable("Personel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthdate = new DateTime(2019, 7, 16, 11, 48, 46, 981, DateTimeKind.Utc).AddTicks(3780),
                            CityId = 3,
                            Email = "parviz@gmail.com",
                            FamilyStatusId = 2,
                            FatherName = "Rovsen",
                            Firstname = "Parviz",
                            GenderId = 2,
                            Lastname = "Aliyev",
                            PinCode = "123456",
                            Residence = "Baki",
                            SerialNumber = "123456"
                        });
                });

            modelBuilder.Entity("ERP.Shared.Entities.PersonelFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileName");

                    b.Property<string>("FilePath");

                    b.Property<int>("PersonelFileTypeId");

                    b.Property<int>("PersonelId");

                    b.HasKey("Id");

                    b.HasIndex("PersonelFileTypeId");

                    b.HasIndex("PersonelId");

                    b.ToTable("PersonelFile");
                });

            modelBuilder.Entity("ERP.Shared.Entities.PersonelFileType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("PersonelFileType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Diplomun kopyasi"
                        });
                });

            modelBuilder.Entity("ERP.Shared.Entities.PhoneType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalNumber");

                    b.Property<string>("HomeNumber");

                    b.Property<string>("JobNumber");

                    b.Property<string>("MobileNumber");

                    b.Property<int?>("PersonPhoneId");

                    b.HasKey("Id");

                    b.HasIndex("PersonPhoneId");

                    b.ToTable("PhoneType");
                });

            modelBuilder.Entity("ERP.Shared.Entities.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Position");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Web Developer"
                        });
                });

            modelBuilder.Entity("ERP.Shared.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("ERP.Shared.Entities.SocialStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("PersonelId");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.ToTable("SocialStatus");
                });

            modelBuilder.Entity("ERP.Shared.Entities.StructureType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartmentId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("StuctureType");
                });

            modelBuilder.Entity("ERP.Shared.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<int>("PersonelId");

                    b.Property<bool>("Status");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("PersonelId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "01c7cd0d4588b883210ec250a34c06ac",
                            PersonelId = 1,
                            Status = true,
                            Username = "ParvizRA"
                        });
                });

            modelBuilder.Entity("ERP.Shared.Entities.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoleId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("ERP.Shared.Entities.WorkBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BeginDate");

                    b.Property<DateTime>("EndDate");

                    b.Property<int>("OrganizationId");

                    b.Property<int>("PositionId");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PositionId");

                    b.ToTable("WorkBook");
                });

            modelBuilder.Entity("ERP.Shared.Entities.WorkPlace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentPositionId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentPositionId");

                    b.HasIndex("UserId");

                    b.ToTable("WorkPlace");
                });

            modelBuilder.Entity("ERP.HRM.Entities.ApplicationNumber", b =>
                {
                    b.HasOne("ERP.HRM.Entities.Period", "Period")
                        .WithMany("ApplicationNumbers")
                        .HasForeignKey("PeriodId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP.HRM.Entities.PersonApplicationType", "PersonApplicationType")
                        .WithMany()
                        .HasForeignKey("PersonApplicationTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP.HRM.Entities.PersonApplication", b =>
                {
                    b.HasOne("ERP.Shared.Entities.DepartmentPosition", "DepartmentPosition")
                        .WithMany()
                        .HasForeignKey("DepartmentPositionId");

                    b.HasOne("ERP.HRM.Entities.PersonApplicationType", "PersonApplicationType")
                        .WithMany()
                        .HasForeignKey("PersonApplicationTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP.Shared.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId");
                });

            modelBuilder.Entity("ERP.HRM.Entities.PersonTabel", b =>
                {
                    b.HasOne("ERP.Shared.Entities.DepartmentPosition", "DepartmentPosition")
                        .WithMany()
                        .HasForeignKey("DepartmentPositionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP.HRM.Entities.Vacation", b =>
                {
                    b.HasOne("ERP.Shared.Entities.DepartmentPosition", "DepartmentPosition")
                        .WithMany()
                        .HasForeignKey("DepartmentPositionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP.Shared.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId");

                    b.HasOne("ERP.HRM.Entities.VacationType", "VacationType")
                        .WithMany("Vacations")
                        .HasForeignKey("VacationTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP.Shared.Entities.Department", b =>
                {
                    b.HasOne("ERP.Shared.Entities.Department")
                        .WithMany("TopDepartments")
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("ERP.Shared.Entities.DepartmentPosition", b =>
                {
                    b.HasOne("ERP.HRM.Entities.ContractType", "ContractType")
                        .WithMany("DepartmentPositions")
                        .HasForeignKey("ContractTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP.Shared.Entities.Department", "Department")
                        .WithMany("DepartmentPositions")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP.Shared.Entities.Organization", b =>
                {
                    b.HasOne("ERP.Shared.Entities.OrganizationLegalForm", "OrganizationLegalForm")
                        .WithMany()
                        .HasForeignKey("OrganizationLegalFormId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP.Shared.Entities.OrganizationLegalType", "OrganizationLegalType")
                        .WithMany()
                        .HasForeignKey("OrganizationLegalTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP.Shared.Entities.PersonPhone", b =>
                {
                    b.HasOne("ERP.Shared.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP.Shared.Entities.Personel", b =>
                {
                    b.HasOne("ERP.Shared.Entities.City", "City")
                        .WithMany("Personels")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP.Shared.Entities.FamilyStatus", "FamilyStatus")
                        .WithMany("Personels")
                        .HasForeignKey("FamilyStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP.Shared.Entities.Gender", "Gender")
                        .WithMany("Personels")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP.Shared.Entities.PersonelFile", b =>
                {
                    b.HasOne("ERP.Shared.Entities.PersonelFileType", "PersonelFileType")
                        .WithMany("PersonelFiles")
                        .HasForeignKey("PersonelFileTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP.Shared.Entities.Personel", "Personel")
                        .WithMany()
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP.Shared.Entities.PhoneType", b =>
                {
                    b.HasOne("ERP.Shared.Entities.PersonPhone")
                        .WithMany("PhoneTypes")
                        .HasForeignKey("PersonPhoneId");
                });

            modelBuilder.Entity("ERP.Shared.Entities.SocialStatus", b =>
                {
                    b.HasOne("ERP.Shared.Entities.Personel")
                        .WithMany("SocialStatuses")
                        .HasForeignKey("PersonelId");
                });

            modelBuilder.Entity("ERP.Shared.Entities.StructureType", b =>
                {
                    b.HasOne("ERP.Shared.Entities.Department")
                        .WithMany("StructureTypes")
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("ERP.Shared.Entities.User", b =>
                {
                    b.HasOne("ERP.Shared.Entities.Personel", "Personel")
                        .WithMany("Users")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP.Shared.Entities.UserRole", b =>
                {
                    b.HasOne("ERP.Shared.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP.Shared.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP.Shared.Entities.WorkBook", b =>
                {
                    b.HasOne("ERP.Shared.Entities.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP.Shared.Entities.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ERP.Shared.Entities.WorkPlace", b =>
                {
                    b.HasOne("ERP.Shared.Entities.DepartmentPosition", "DepartmentPosition")
                        .WithMany()
                        .HasForeignKey("DepartmentPositionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ERP.Shared.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
